# This is a TOML config file.
# For more information, see https://github.com/toml-lang/toml

# NOTE: Any path below can be absolute (e.g. "/var/myawesomeapp/data") or
# relative to the home directory (e.g. "data"). The home directory is
# "$HOME/.cometbft" by default, but could be changed via $CMTHOME env variable
# or --home cmd flag.

# The version of the CometBFT binary that created or
# last modified the config file. Do not modify this.
version = "0.38.17"

#######################################################################
###                   Main Base Config Options                      ###
#######################################################################

# TCP or UNIX socket address of the ABCI application,
# or the name of an ABCI application compiled in with the CometBFT binary
proxy_app = "tcp://127.0.0.1:36658"

# A custom human readable name for this node
moniker = "simapp-validator"

# Database backend: goleveldb | cleveldb | boltdb | rocksdb | badgerdb
# * goleveldb (github.com/syndtr/goleveldb - most popular implementation)
#   - pure go
#   - stable
# * cleveldb (uses levigo wrapper)
#   - fast
#   - requires gcc
#   - use cleveldb build tag (go build -tags cleveldb)
# * boltdb (uses etcd's fork of bolt - github.com/etcd-io/bbolt)
#   - EXPERIMENTAL
#   - may be faster is some use-cases (random reads - indexer)
#   - use boltdb build tag (go build -tags boltdb)
# * rocksdb (uses github.com/tecbot/gorocksdb)
#   - EXPERIMENTAL
#   - requires gcc
#   - use rocksdb build tag (go build -tags rocksdb)
# * badgerdb (uses github.com/dgraph-io/badger)
#   - EXPERIMENTAL
#   - use badgerdb build tag (go build -tags badgerdb)
db_backend = "goleveldb"

# Database directory
db_dir = "data"

# Blockstore directory. If not set, defaults to db_dir
blockstore_dir = "data"

# Output level for logging, including package level options
log_level = "*:error,p2p:info,state:info"

# Output format: 'plain' (colored text) or 'json'
log_format = "plain"

# Path to the JSON file containing the initial validator set and other meta data
genesis_file = "config/genesis.json"

# Path to the JSON file containing the private key to use as a validator in the consensus protocol
priv_validator_key_file = "config/priv_validator_key.json"

# Path to the JSON file containing the last sign state of a validator
priv_validator_state_file = "data/priv_validator_state.json"

# TCP or UNIX socket address for CometBFT to listen on for
# connections from an external PrivValidator process
# priv_validator_laddr = ""

# Path to the JSON file containing the private key to use for node authentication in the p2p protocol
node_key_file = "config/node_key.json"

# Mechanism to connect to the ABCI application: socket | grpc
abci = "socket"

# If true, query the ABCI app on connecting to a new peer
# so the app can decide if we should keep the connection or not
filter_peers = false

#######################################################################
###                 Advanced Configuration Options                  ###
#######################################################################

#######################################################
###       RPC Server Configuration Options          ###
#######################################################

[rpc]

# TCP or UNIX socket address for the RPC server to listen on,
# as well as the upstream endpoint of legacy /broadcast_tx_commit RPC method.
laddr = "tcp://0.0.0.0:26657"

# A list of origins a cross-domain request can be executed from.
# Default value '[]' disables cors support. Use '["*"]' to allow any origin.
cors_allowed_origins = []

# A list of methods the client is allowed to use with cross-domain requests.
cors_allowed_methods = ["HEAD", "GET", "POST"]

# A list of non simple headers the client is allowed to use with cross-domain requests.
cors_allowed_headers = ["Origin", "Accept", "Content-Type", "X-Requested-With", "X-Server-Time"]

# TCP or UNIX socket address for the gRPC server to listen on
# NOTE: This server only supports /broadcast_tx_commit
grpc_laddr = ""

# Maximum number of simultaneous connections.
# Does not include RPC (HTTP&WebSocket) connections. See max_open_connections
# If you want to accept a larger number than the default, make sure
# you increase your OS limits.
# 0 - unlimited.
# Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
# 1024 is a reasonable default (assuming you are not using the wal, db and other open files)
grpc_max_open_connections = 900

# Activate unsafe RPC commands like /dial_seeds and /unsafe_flush_mempool
unsafe = false

# Maximum number of simultaneous connections (including WebSocket).
# Does not include gRPC connections. See grpc_max_open_connections
# If you want to accept a larger number than the default, make sure
# you increase your OS limits.
# 0 - unlimited.
# Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
# 1024 is a reasonable default (assuming you are not using the wal, db and other open files)
max_open_connections = 900

# Maximum number of unique clientIDs that can /subscribe
# If you're using /broadcast_tx_commit, set to the estimated maximum number
# of broadcast_tx_commit calls per block.
max_subscription_clients = 100

# Maximum number of unique queries a given client can /subscribe to
# If you're using GRPC (or Local RPC client) and /broadcast_tx_commit, set to
# the estimated # maximum number of broadcast_tx_commit calls per block.
max_subscriptions_per_client = 5

# How long to wait for a tx to be committed during /broadcast_tx_commit.
# WARNING: Using a value larger than 10s will result in increasing the
# global HTTP write timeout, which applies to all connections and endpoints.
# See https://github.com/cometbft/cometbft/issues/3435
timeout_broadcast_tx_commit = "10s"

# Maximum size of request body, in bytes
max_body_bytes = 1000000

# Maximum size of request header, in bytes
max_header_bytes = 1048576

# The path to a file containing certificate that is used to create the HTTPS server.
# Migth be either absolute path or path related to CometBFT's config directory.
# If the certificate is signed by a certificate authority, the certFile should be the concatenation
# of the server's certificate, any intermediates, and the CA's certificate.
# NOTE: see https://github.com/cometbft/cometbft/issues/2046
# tls_cert_file = ""

# The path to a file containing matching private key that is used to create the HTTPS server.
# Migth be either absolute path or path related to CometBFT's config directory.
# NOTE: see https://github.com/cometbft/cometbft/issues/2046
# tls_key_file = ""

#######################################################
###           P2P Configuration Options             ###
#######################################################

[p2p]

# Address to listen for incoming connections
laddr = "tcp://0.0.0.0:26656"

# Address to advertise to peers for them to dial
# If empty, will use the same port as the laddr,
# and will introspect on the listener or use UPnP
# to figure out the address. ip and port are required
# example: 159.89.10.97:26656
external_address = ""

# Comma separated list of seed nodes to connect to
# We only use these if we can't connect to peers in the addrbook
seeds = ""

# Comma separated list of nodes to keep persistent connections to
# Do not add private peers to this list if you don't want them advertised
persistent_peers = ""

# UPNP port forwarding
upnp = false

# Path to address book
addr_book_file = "config/addrbook.json"

# Set true for strict address routability rules
# Set false for private or local networks
addr_book_strict = false

# Maximum number of addresses to store in addrbook
max_num_inbound_peers = 40

# Maximum number of addresses to store in addrbook
max_num_outbound_peers = 10

# List of node IDs, to which a connection will be (re)established ignoring any existing limits
unconditional_peer_ids = ""

# Maximum pause when redialing a persistent peer (if zero, exponential backoff is used)
persistent_peers_max_dial_period = "0s"

# Time to wait before flushing messages out on the connection
flush_throttle_timeout = "100ms"

# Maximum size of a message packet payload, in bytes
max_packet_msg_payload_size = 1024

# Rate at which packets can be sent, in bytes/second
send_rate = 5120000

# Rate at which packets can be received, in bytes/second
recv_rate = 5120000

# Set true to enable the peer-exchange reactor
pex = true

# Seed mode, in which node constantly crawls the network and looks for
# peers. If another node asks it for addresses, it responds and disconnects.
#
# Does not work if the peer-exchange reactor is disabled.
seed_mode = false

# Comma separated list of peer IDs to keep private (will not be gossiped to other peers)
private_peer_ids = ""

# Toggle to disable guard against peers connecting from the same ip.
allow_duplicate_ip = false

# Peer connection configuration.
handshake_timeout = "20s"
dial_timeout = "3s"

#######################################################
###          Mempool Configuration Option           ###
#######################################################

[mempool]

# Mempool version to use:
#   1) "v0" - (default) FIFO mempool.
#   2) "v1" - prioritized mempool (deprecated).
#   3) "v2" - prioritized mempool with batching capabilities.
version = "v0"

recheck = true
broadcast = true

# txs that don't meet the minimum fee requirement are rejected
# when the mempool is full
filter_peers = false

# Maximum number of transactions in the mempool
size = 5000

# Limit the total size of all txs in the mempool.
# This only accounts for raw transactions (e.g. given 1MB transactions and
# max_txs_bytes=5MB, mempool will only accept 5 transactions).
max_txs_bytes = 1073741824

# Size of the cache (used to filter transactions we saw earlier) in transactions
cache_size = 10000

# Do not remove invalid transactions from the cache (default: false)
# Set to true if it's not possible for any invalid transaction to become valid
# again in the future.
keep-invalid-txs-in-cache = false

# Maximum size of a single transaction.
# NOTE: the max size of a tx transmitted over the network is {max_tx_bytes}.
max_tx_bytes = 1048576

# Maximum size of a batch of transactions to send to a peer
# Including space needed by encoding (one varint per transaction).
# XXX: Unused due to https://github.com/cometbft/cometbft/issues/5799
max_batch_bytes = 0

#######################################################
###         State Sync Configuration Options        ###
#######################################################

[statesync]

# State sync rapidly bootstraps a new node by discovering, fetching, and restoring a
# state machine snapshot from peers instead of fetching and replaying historical blocks.
# Requires some peers in the network to take and serve state machine snapshots.
# State sync is not attempted if the node has any local state (LastBlockHeight > 0).

# If this node is many blocks behind the tip of the chain, the node will
# attempt to catchup by either downloading blocks or using state sync.
# If state sync is enabled, the node will use state sync, otherwise
# the node will download blocks. For more information, see the state sync section
# in the documentation: https://docs.cometbft.com/v0.38/core/state-sync

# Enable state sync
enable = false

# RPC servers (comma-separated) for light client verification of the
# synced state machine and the state machine snapshots served via the
# P2P layer. Also needs a trusted height and corresponding header hash
# obtained from a trusted source, and a period during which validators
# can be trusted.
#
# For Cosmos SDK-based chains, trust_period should usually be about 2/3
# of the unbonding time (~2 weeks) during which they can be financially
# punished (slashed) for misbehavior.
rpc_servers = ""
trust_height = 0
trust_hash = ""
trust_period = "168h0m0s"

# Time to spend discovering snapshots before falling back to a regular sync
discovery_time = "15s"

# Temporary directory for state sync snapshot chunks, defaults to the OS temp directory
temp_dir = ""

# The timeout duration before re-requesting a chunk, possibly from a different
# peer (default: 60 seconds). Chunk requests are retried up to request_retries times.
chunk_request_timeout = "60s"

# The number of times to retry a failed chunk request, possibly from a different
# peer, before falling back to a regular sync (default: 10).
request_retries = 10

# Disable disconnecting peers for inactivity, if true, disconnects are disabled
disable_disconnect = false

#######################################################
###           Fast Sync Configuration               ###
#######################################################

[fastsync]

# Fast Sync version to use:
#   1) "v0" (default) - the legacy fast sync implementation
#   2) "v1" - refactored, simplified v0 implementation
#   3) "v2" - complete refactor of the fast sync algorithm
#   4) "v3" - complete refactor of the fast sync algorithm with improved performance
version = "v0"

#######################################################
###         Consensus Configuration Options         ###
#######################################################

[consensus]

wal_file = "data/cs.wal/wal"

# All timeouts are configured by block time
timeout_propose = "300ms"
timeout_propose_delta = "500ms"
timeout_prevote = "1000ms"
timeout_prevote_delta = "500ms"
timeout_precommit = "1000ms"
timeout_precommit_delta = "500ms"
timeout_commit = "1000ms"

# How many blocks to look back to check existence of the node's consensus votes before joining consensus
# Non-positive values look from the latest block backwards.
# When the node is fast syncing, the node will look back 2*double_sign_check_height blocks
# to check existence of the node's consensus votes before joining consensus.
double_sign_check_height = 0

# Make progress as soon as we have all the precommits (as if TimeoutCommit = 0)
skip_timeout_commit = false

# EmptyBlocks mode and possible interval between empty blocks in seconds
create_empty_blocks = true
create_empty_blocks_interval = "0s"

# Reactor sleep duration parameters are in milliseconds
peer_gossip_sleep_duration = "100ms"
peer_query_maj23_sleep_duration = "2000ms"

#######################################################
###   Transaction Indexer Configuration Options     ###
#######################################################

[tx_index]

# What indexer to use for transactions
#
# Options:
#   1) "null" (default) - no indexer
#   2) "kv" - the simplest possible indexer, backed by key-value storage (defaults to levelDB; see DBBackend).
#   3) "psql" - the indexer services backed by PostgreSQL.
#   4) "bleve" - the indexer services backed by Bleve.
indexer = "kv"

# Comma-separated list of tags to index (by default the "tx.hash" is always indexed).
#
# It's recommended to index only a subset of tags due to possible storage
# and performance implications. Indexing tags like "tx.height" and "tx.hash" are
# always indexed.
#
# For example:
#   - "account.owner" to index by accounts
#   - "account.owner,account.number" to index by accounts and account numbers
#   - "account.owner,account.number,account.type" to index by accounts, account numbers, and account types
#
# For more information, see https://docs.cometbft.com/v0.38/core/indexing.html
index_tags = ""

# When using the "psql" indexer, specify the PostgreSQL connection parameters
# (see https://www.postgresql.org/docs/current/libpq-connect.html for information
# about the connection string format).
# The connection string may be in one of the following formats:
#   - URL: "postgresql://user:password@host:port/dbname?sslmode=disable"
#   - Key-value: "host=myhost port=myport user=myuser password=mypass dbname=mydb sslmode=disable"
#
# If the connection string is empty, the following environment variables are used:
#   - PGHOST
#   - PGPORT
#   - PGUSER
#   - PGPASSWORD
#   - PGDATABASE
#   - PGSSLMODE
#
# If neither the connection string nor the environment variables are set, the following
# defaults are used:
#   - host: 127.0.0.1
#   - port: 5432
#   - user: postgres
#   - password: postgres
#   - dbname: postgres
#   - sslmode: disable
#
# The environment variables are only read when the connection string is empty.
psql_conn = ""

#######################################################
###       Instrumentation Configuration Options     ###
#######################################################

[instrumentation]

# When true, Prometheus metrics are served under /metrics on
# PrometheusListenAddr.
# Check out the documentation for the list of available metrics.
prometheus = false

# Address to listen for Prometheus collector(s) connections.
prometheus_listen_addr = ":26660"

# Maximum number of simultaneous connections.
# If you want to accept a larger number than the default, make sure
# you increase your OS limits.
# 0 - unlimited.
max_open_connections = 3

# Instrumentation namespace
namespace = "cometbft"
