syntax = "proto3";
package celestia.signal.v1;

import "google/api/annotations.proto";

option go_package = "github.com/celestiaorg/celestia-app/x/signal/types";

// Msg defines the upgrade Msg service.
service Msg {
  // SignalVersion allows a validator to signal for an upgrade.
  rpc SignalVersion(MsgSignalVersion) returns (MsgSignalVersionResponse) {
    option (google.api.http).post = "/upgrade/v1/signal";
  }

  // TryUpgrade tallies all the votes and if a quorum is reached, it will
  // trigger an upgrade for the following height.
  rpc TryUpgrade(MsgTryUpgrade) returns (MsgTryUpgradeResponse) {
    option (google.api.http).post = "/upgrade/v1/upgrade";
  }
}

// MsgSignalVersion signals for an upgrade.
message MsgSignalVersion {
  string validator_address = 1;
  uint64 version = 2;
}

// MsgSignalVersionResponse is the response type for the SignalVersion method.
message MsgSignalVersionResponse {}

// MsgTryUpgrade tries to upgrade the chain.
message MsgTryUpgrade { string signer = 1; }

// MsgTryUpgradeResponse is the response type for the TryUpgrade method.
message MsgTryUpgradeResponse {}
